version: 2.1

jobs:
  preconditions:
    docker: &BUILDIMAGE
      - image: jenkinsrise/cci-v2-components:0.0.5
    steps:
      - checkout
      - run: |
          if [ -z $(grep version package.json |grep -o '[0-9.]*') ]
          then
            echo Version must be specified in package.json
            exit 1
          fi

  install:
    docker: *BUILDIMAGE
    steps:
      - checkout
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          key: node-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

  test:
    docker: *BUILDIMAGE
    steps:
      - checkout
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: sudo npm install -g wct-istanbul
      - run: npm test
      - run: cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js

  build:
    docker: *BUILDIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: |
          VERSION=$(grep version package.json | grep -o '[0-9.]*')
          sed -i "
            s/__VERSION__/$VERSION/;
          " src/rise-video-version.js
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist

  gcloud-setup:
    docker: &GCSIMAGE
      - image: jenkinsrise/cci-v2-launcher-electron:0.0.6
        environment:
          COMPONENT_NAME: rise-video
          WIDGETS_BASE: gs://widgets.risevision.com
    steps:
      - run: mkdir -p ~/.ssh
      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: git clone git@github.com:Rise-Vision/private-keys.git
      - run: mv private-keys ..
      - run: gcloud auth activate-service-account 452091732215@developer.gserviceaccount.com --key-file ../private-keys/storage-server/rva-media-library-ce0d2bd78b54.json
      - persist_to_workspace:
          root: ~/.config
          paths:
            - gcloud

  build-e2e-page:
    parameters:
      stage:
        type: string
    docker: *BUILDIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: echo build e2e page << parameters.stage >>
      - run: |
          VERSION=$(echo -n $CIRCLE_BRANCH |awk 'BEGIN{FS="/"}{print tolower($NF)}')
          sed "
            s/__STAGE__/<< parameters.stage >>/;
            s/__VERSION__/$VERSION/;
          " e2e/rise-video.html > e2e/rise-video-electron.html
      - run: cp e2e/polymer-e2e-electron.json polymer.json
      - run: polymer build
      - persist_to_workspace:
          root: ./build
          paths:
            - base

  deploy-stage:
    docker: *GCSIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: mkdir -p ~/.config
      - run: cp -r gcloud ~/.config
      - run: |
          VERSION=$(echo -n $CIRCLE_BRANCH |awk 'BEGIN{FS="/"}{print tolower($NF)}')
          TARGET=$WIDGETS_BASE/staging/components/$COMPONENT_NAME/$VERSION/
          echo Deploying version $VERSION to $COMPONENT_NAME
          node_modules/rise-common-component/scripts/deploy-gcs.sh $COMPONENT_NAME $TARGET

  deploy-e2e-page:
    parameters:
      stage:
        type: string
    docker: *GCSIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: mkdir -p ~/.config
      - run: cp -r gcloud ~/.config
      - run: |
          TARGET=$WIDGETS_BASE/<< parameters.stage >>/e2e/$COMPONENT_NAME/electron
          echo Deploying << parameters.stage >> electron e2e page for $COMPONENT_NAME
          gsutil -m rsync -d -r base $TARGET
          gsutil -m setmeta -r -h "Cache-Control:private, max-age=0" $TARGET
          gsutil -m acl -r ch -u AllUsers:R $TARGET

  test-e2e-electron:
    parameters:
      displayId:
        type: string
      installerPath:
        type: string
    docker: &E2EIMAGE
      - image: jenkinsrise/jenkinsrise-cci-image-launcher-electron-e2e:0.0.2
        environment:
          INSTALLER_BASE: https://storage.googleapis.com/install-versions.risevision.com
          SCREENSHOTS_BASE: https://storage.googleapis.com/risevision-display-screenshots
          PLAYER_CONFIG: /home/circleci/rvplayer/RiseDisplayNetworkII.ini
    steps:
      - run: git clone https://github.com/Rise-Vision/rise-launcher-electron-e2e.git
      - run:
          working_directory: rise-launcher-electron-e2e
          command: npm install
      - run: mkdir ~/rvplayer
      - run:
          name: setup rise player configuration file
          command: |
            echo "displayid=<< parameters.displayId >>" > $PLAYER_CONFIG
            echo proxy= >> $PLAYER_CONFIG
      - run:
          name: download expected screenshot
          working_directory: rise-launcher-electron-e2e
          command: |
            EXPECTED_SNAPSHOT_URL=$SCREENSHOTS_BASE/<< parameters.displayId >>.jpg
            curl $EXPECTED_SNAPSHOT_URL > expected-screenshot.jpg
      - run:
          name: download Rise Player Electron
          working_directory: rise-launcher-electron-e2e
          command: curl $INSTALLER_BASE<< parameters.installerPath >>installer-lnx-64.sh > installer.sh
      - run: chmod +x ./rise-launcher-electron-e2e/installer.sh
      - run:
          name: run the test
          working_directory: rise-launcher-electron-e2e
          command: node test-display-runner-using-downloaded-installer.js << parameters.displayId >> 20
      - run:
          command: |
            mkdir output
            mv ./rise-launcher-electron-e2e/*screenshot.jpg output
          when: always
      - store_artifacts:
          path: output
          when: always

  deploy-production:
    parameters:
      stage:
        type: string
    docker: *GCSIMAGE
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          key: node-cache-{{ checksum "package.json" }}
      - run: mkdir -p ~/.config
      - run: cp -r gcloud ~/.config
      - run: |
          MAJOR=$(grep version package.json | grep -Po '[0-9]+' | head -1)
          TARGET=$WIDGETS_BASE/<< parameters.stage >>/components/$COMPONENT_NAME/$MAJOR/
          echo Deploying << parameters.stage >> version of $COMPONENT_NAME/$MAJOR
          node_modules/rise-common-component/scripts/deploy-gcs.sh $COMPONENT_NAME $TARGET

workflows:
  workflow1:
    jobs:
      - preconditions
      - install:
          requires:
            - preconditions
      - gcloud-setup:
          requires:
            - preconditions
          filters:
            branches:
              only:
                - /^(stage|staging)[/].*/
                - /^e2e[/].*/
                - master
                - build/stable
      - test:
          requires:
            - install
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - /^(stage|staging)[/].*/
                - /^e2e[/].*/
                - master
                - build/stable
      - build-e2e-page:
          stage: beta
          name: build-e2e-page-beta
          requires:
            - build
          filters:
            branches:
              only:
                - /^e2e[/].*/
                - master
      - build-e2e-page:
          stage: stable
          name: build-e2e-page-stable
          requires:
            - build
          filters:
            branches:
              only:
                - build/stable
      - deploy-stage:
          requires:
            - gcloud-setup
            - build
          filters:
            branches:
              only:
                - /^(stage|staging)[/].*/
                - /^e2e[/].*/
                - master
                - build/stable
      - deploy-e2e-page:
          stage: beta
          name: deploy-e2e-page-beta
          requires:
            - gcloud-setup
            - build-e2e-page-beta
          filters:
            branches:
              only:
                - master
                - /^e2e[/].*/
      - deploy-e2e-page:
          stage: stable
          name: deploy-e2e-page-stable
          requires:
            - gcloud-setup
            - build-e2e-page-stable
          filters:
            branches:
              only:
                - build/stable
      - test-e2e-electron:
          displayId: M978YFZS8TQX
          installerPath: /beta/
          name: test-e2e-electron-beta
          requires:
            - deploy-stage
            - deploy-e2e-page-beta
          filters:
            branches:
              only:
                - master
                - /^e2e[/].*/
      - test-e2e-electron:
          displayId: HZ7RT6SS322G
          installerPath: /
          name: test-e2e-electron-stable
          requires:
            - deploy-stage
            - deploy-e2e-page-stable
          filters:
            branches:
              only:
                - build/stable
      - deploy-production:
          stage: beta
          name: deploy-beta
          requires:
            - test-e2e-electron-beta
          filters:
            branches:
              only:
                - master
      - deploy-production:
          stage: stable
          name: deploy-stable
          requires:
            - test-e2e-electron-stable
          filters:
            branches:
              only:
                - build/stable
